<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
<title>Math Learning Hub</title>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');

  /* Reset and base */
  *, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  body {
    font-family: 'Montserrat', sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: #f0f4f8;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: 1rem;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  #app {
    background: rgba(255 255 255 / 0.12);
    border-radius: 24px;
    max-width: 350px;
    width: 100%;
    min-height: 600px;
    padding: 1.5rem 1.75rem 2rem 1.75rem;
    box-shadow: 0 16px 32px rgba(0,0,0, 0.35);
    overflow-y: auto;
    scroll-padding-top: 4rem;
    border: 1px solid rgba(255,255,255,0.15);
  }

  #app::-webkit-scrollbar {
    width: 8px;
  }
  #app::-webkit-scrollbar-track {
    background: transparent;
  }
  #app::-webkit-scrollbar-thumb {
    background: rgba(255 255 255 / 0.3);
    border-radius: 10px;
  }

  h1 {
    font-weight: 700;
    font-size: 2rem;
    letter-spacing: 0.1em;
    text-align: center;
    margin-bottom: 0.25rem;
    text-shadow:
      0 0 5px rgba(255 255 255 / 0.4),
      0 0 10px rgba(255 255 255 / 0.15);
    user-select: none;
  }
  p.subtitle {
    font-weight: 400;
    font-size: 1rem;
    text-align: center;
    color: #d1d9e6cc;
    margin-bottom: 0.5rem;
    letter-spacing: 0.05em;
    user-select: none;
  }
  p.description {
    font-weight: 500;
    font-size: 0.9rem;
    text-align: center;
    color: #aebacedd;
    margin-bottom: 1.5rem;
    user-select: none;
  }

  section {
    background: rgba(255 255 255 / 0.18);
    border-radius: 16px;
    padding: 1.2rem 1.4rem 1.6rem 1.4rem;
    margin-bottom: 1.5rem;
    box-shadow:
      inset 0 0 8px rgba(255 255 255 / 0.2),
      0 4px 12px rgba(0,0,0,0.25);
    transition: background 0.3s ease, transform 0.3s ease;
    cursor: default;
  }
  section:hover, section:focus-within {
    background: rgba(255 255 255 / 0.28);
    transform: translateY(-4px);
    box-shadow:
      inset 0 0 14px rgba(255 255 255 / 0.35),
      0 8px 16px rgba(0,0,0,0.3);
    outline: none;
  }

  section h2 {
    font-weight: 700;
    font-size: 1.4rem;
    margin-bottom: 0.6rem;
    color: #e6eaf3;
    letter-spacing: 0.06em;
    user-select: none;
  }

  .placeholder-content {
    font-size: 1rem;
    color: #aebacedd;
    font-style: italic;
    line-height: 1.4;
    user-select: none;
    /* subtle animated gradient text effect */
    background: linear-gradient(-45deg, #8db1ff, #b5a9f9, #d8aaff, #aabbff);
    background-size: 400% 400%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 7s ease infinite;
  }

  /* Quiz styles */
  .quiz-question {
    font-weight: 600;
    margin-bottom: 10px;
  }
  .answers {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }
  button.answer-btn {
    flex-grow: 1;
    flex-basis: calc(50% - 8px);
    padding: 8px 10px;
    background: #38bdf8;
    border: none;
    border-radius: 10px;
    font-weight: 600;
    color: #003045;
    cursor: pointer;
    transition: background-color 0.3s ease;
    user-select: none;
  }
  button.answer-btn:hover:not(:disabled) {
    background: #60a5fa;
  }
  button.answer-btn.correct {
    background: #22c55e;
    color: white;
    cursor: default;
  }
  button.answer-btn.incorrect {
    background: #ef4444;
    color: white;
    cursor: default;
  }
  button.answer-btn:disabled {
    cursor: default;
  }
  .quiz-feedback {
    margin-top: 10px;
    font-weight: 700;
    user-select: none;
  }
  .quiz-feedback.correct {
    color: #22c55e;
  }
  .quiz-feedback.incorrect {
    color: #ef4444;
  }
  button.next-btn {
    margin-top: 10px;
    background: #facc15;
    border-radius: 10px;
    border: none;
    padding: 8px 12px;
    font-weight: 700;
    color: #1e293b;
    cursor: pointer;
    user-select: none;
  }
  button.next-btn:hover:not(:disabled) {
    background: #eab308;
  }

  @keyframes gradientShift {
    0%{background-position:0% 50%}
    50%{background-position:100% 50%}
    100%{background-position:0% 50%}
  }

  /* Responsive design for smaller screens */
  @media(max-width: 400px) {
    #app {
      max-width: 100%;
      padding: 1rem 1.25rem 1.5rem 1.25rem;
      min-height: 580px;
    }
    section h2 {
      font-size: 1.25rem;
    }
    button.answer-btn {
      flex-basis: 100%;
    }
  }
</style>
</head>
<body>
  <main id="app" role="main" aria-label="Math learning hub">
    <h1>Math Learning Hub</h1>
    <p class="subtitle">Your gateway to mastering math concepts</p>
    <p class="description">Test yourself! Each box is a button!</p>

    <section tabindex="0" aria-describedby="section1-desc">
      <h2>Textbooks and Resources</h2>
      <p id="section1-desc" class="placeholder-content">Access comprehensive textbooks and resources to build your skills. Content coming soon!</p>
    </section>

    <section tabindex="0" aria-describedby="section2-desc">
      <h2>Textbooks and Resources</h2>
      <p id="section2-desc" class="placeholder-content">Explore key textbooks and study guides for learning concepts. Coming soon!</p>
    </section>

    <section tabindex="0" aria-describedby="section3-desc">
      <h2>Quizzes</h2>
      <div id="quiz" aria-live="polite"></div>
    </section>
  </main>

  <script>
    (function(){
      const quizData = [
        {
          question: "What is the sum of all angles in a triangle?",
          answers: ["90 degrees", "180 degrees", "360 degrees", "120 degrees"],
          correctIndex: 1
        },
        {
          question: "How many sides does a hexagon have?",
          answers: ["5", "6", "7", "8"],
          correctIndex: 1
        }
      ];

      const container = document.getElementById('quiz');
      let currentIndex = 0;

      function createElement(type, props={}, ...children){
        const el = document.createElement(type);
        for(const [key,value] of Object.entries(props)){
          if(key === 'className') el.className = value;
          else if(key === 'onclick') el.addEventListener('click', value);
          else if(key.startsWith('aria')) el.setAttribute(key, value);
          else el[key] = value;
        }
        for(const child of children){
          if(typeof child === 'string') el.appendChild(document.createTextNode(child));
          else if(child) el.appendChild(child);
        }
        return el;
      }

      function showQuestion(){
        container.innerHTML = '';
        const q = quizData[currentIndex];

        const quesEl = createElement('div', {className:'quiz-question'}, q.question);
        const answersEl = createElement('div', {className:'answers'});

        q.answers.forEach((ans, i) => {
          const btn = createElement('button',{
            className: 'answer-btn',
            type: 'button',
            onclick: () => selectAnswer(i, btn)
          }, ans);
          answersEl.appendChild(btn);
        });

        const feedbackEl = createElement('div', {className: 'quiz-feedback', id:'feedback'});
        container.appendChild(quesEl);
        container.appendChild(answersEl);
        container.appendChild(feedbackEl);

        nextBtn.style.display = 'none';
      }

      function disableAnswers(){
        const buttons = container.querySelectorAll('button.answer-btn');
        buttons.forEach(btn => btn.disabled = true);
      }

      function selectAnswer(idx, btn){
        disableAnswers();
        const feedbackEl = document.getElementById('feedback');
        const q = quizData[currentIndex];

        if(idx === q.correctIndex){
          btn.classList.add('correct');
          feedbackEl.textContent = 'Correct! ðŸŽ‰';
          feedbackEl.className = 'quiz-feedback correct';
        } else {
          btn.classList.add('incorrect');
          feedbackEl.textContent = `Incorrect. The correct answer is "${q.answers[q.correctIndex]}".`;
          feedbackEl.className = 'quiz-feedback incorrect';
          // highlight correct
          const buttons = container.querySelectorAll('button.answer-btn');
          buttons[q.correctIndex].classList.add('correct');
        }
        nextBtn.style.display = 'inline-block';
      }

      function nextQuestion(){
        currentIndex++;
        if(currentIndex >= quizData.length){
          container.innerHTML = '';
          const doneMsg = createElement('p', {className:'placeholder-content'}, 'Great job! You completed the quizzes.');
          container.appendChild(doneMsg);
          nextBtn.style.display = 'none';
          return;
        }
        showQuestion();
      }

      const nextBtn = createElement('button', {className:'next-btn', type:'button', onclick: nextQuestion}, 'Next Question');
      container.appendChild(nextBtn);

      showQuestion();
    })();
  </script>
</body>
</html>
